uses data.String
uses FunctionData
uses data.adt.Stack

data FeatureVector {
  int totalLines
}

// Position-independent features, fixed number of features
data PIFixed extends FeatureVector {
  int nonBlankLines
  int totalVars
  // Number of variables used not of input Variable type
  int nonInputVars
  // NOTE: May need to make this a 'total' rather than average for updating each line.
  // Average number of inter-variable lines
  // int aveVarInteractions
  //int totalVarInteractions // NOTE: Difficult to work out, for now just use total assignments.
  int totalAssignments
  int totalWhiles
  int totalIfs
  int totalFunctionCalls
  int totalReturns // Can there be more than one?
  // Average length of while loop
  int aveLoopLength
  // Average length of if statements
  int aveWhileLength
  int highestNestingLevel
  // -- temporary values for getting highestNestingLevel and aveLoopLenth --
  Stack remainingLinesInBlock // Stack representing the lines remaining to be filled in each control block.
  int totalLoopLength
  int totalWhileLength
  int minimumLinesToComplete // Value representing how many lines are needed to include the specified features
}

// Position-dependent features, fixed number of features
data PDFixed extends FeatureVector {

}

data LineInfo {
  int linesRemaining
}

interface FeatureBuilder {

  PIFixed getNewFeatureVector()

  void setMaxDeviation(int _maxDeviation)

  void setProvidedFeatures(PIFixed _providedFeatures)

  void setFunctionData(FunctionData functionData)

  /* get a new PIFixed feature vector for the current feature vector (of a node) plus the new line. */
  /* FeatureVector updateFeatureVector(FeatureVector current, String newLine) */
  PIFixed updateFeatureVector(PIFixed currentFeatures, int lineType, char newLine[], int subLinesCount) // Pass the new node, which contains the feature vector, the new line, and all information for the operation

  bool rejectEarly(PIFixed currentFeatures, int linesRemaining)

  /* Compute the distance between two vectors. */
  int distanceBetweenVectors(PIFixed lhs, PIFixed rhs)

  bool isProgramSimilar(PIFixed features)

  bool areFeaturesReachable(PIFixed current, bool declarationsComplete)



}
