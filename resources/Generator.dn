uses util.RandomInt

uses data.String

/* The output program interface */
data FunctionPrototype {
	char name[]
	char interfaceMember[]

	char returnType[]
	String parameterTypes[]
	}

/* A possible program */
data Option {
	int lines[]
	}

/* The set of possible programs */
data OptionSet {
	Option options[]
	Option resumeFrom
	}

data FeatureVector {
	int totalLines
}

interface Generator {

	Generator(String searchPaths[])

	void setProvidedInterface(char typeName[])

	//NOTE: you *must* add resources before you add Global APIs, as the latter are drawn from among the former (avoid this by making addGlobalAPI automatically call addResource if not found?)
	void addResource(char path[])
	void addGlobalAPI(char package[])

	OptionSet getOptions(FunctionPrototype fp, int lineCount, int maxOptions, Option resumeFrom)

	Option getRandomOption(FunctionPrototype fp, int lineCount, RandomInt randomSource)

	//int countOptions(FunctionPrototype fp, int lineCount)
	//int getIndexOf(FunctionPrototype fp, int lineCount, Option o)
	//Option getOptionAt(FunctionPrototype fp, int lineCount, int index)

	String[] decodeOption(FunctionPrototype fp, Option n)

	String[] getRequiresList()

	}
